# Generated by Django 3.1.12 on 2021-09-29 06:09

from django.db import migrations


def migrate_users_role_binding(apps, schema_editor):
    user_model = apps.get_model('users', 'User')
    users = user_model.objects.all()
    role_model = apps.get_model('rbac', 'Role')
    roles = role_model.objects.all()
    role_binding_model = apps.get_model('rbac', 'RoleBinding')
    org_member_model = apps.get_model('orgs', 'OrganizationMember')

    # get builtin roles
    roles_map = {role.name: role for role in roles}

    # migrate users of system scope role
    roles_bindings_data = []
    for user in users:
        if user.role == 'Admin':
            role = roles_map['SystemAdmin']
        elif user.role == 'Auditor':
            role = roles_map['SystemAuditor']
        elif user.role == 'User':
            role = roles_map['SystemUser']
        elif user.role == 'App':
            role = roles_map['App']
        else:
            continue
        obj = role_binding_model(user=user, role=role, scope=role.scope)
        roles_bindings_data.append(obj)

    # migrate users of org scope role
    orgs_members = org_member_model.objects.all()
    for org_member in orgs_members:
        if org_member.role == 'Admin':
            role = roles_map['OrgAdmin']
        elif org_member.role == 'Auditor':
            role = roles_map['OrgAuditor']
        elif org_member.role == 'User':
            role = roles_map['OrgUser']
        else:
            continue
        obj = role_binding_model(user=org_member.user, role=role, scope=role.scope, org=org_member.org)
        roles_bindings_data.append(obj)

    role_binding_model.objects.bulk_create(roles_bindings_data)


class Migration(migrations.Migration):

    dependencies = [
        ('rbac', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_users_role_binding)
    ]
